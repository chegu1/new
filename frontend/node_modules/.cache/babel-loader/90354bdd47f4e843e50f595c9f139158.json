{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from './reducers/userReducers';\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('usersInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/chegu/ecommerceformers/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","reducers","productList","productDetails","cart","userLogin","userRegister","userDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,QAA0E,yBAA1E;AAEA,MAAMC,QAAQ,GAAGV,eAAe,CAAC;AAC7BW,EAAAA,WAAW,EAAEP,kBADgB;AAE7BQ,EAAAA,cAAc,EAAEP,qBAFa;AAG7BQ,EAAAA,IAAI,EAAEP,WAHuB;AAI7BQ,EAAAA,SAAS,EAAEP,gBAJkB;AAK7BQ,EAAAA,YAAY,EAAEP,mBALe;AAM7BQ,EAAAA,WAAW,EAAEP;AANgB,CAAD,CAAhC;AASA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMI,YAAY,GAAG;AACjBV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,SAAS,EAAEP;AAAb,GADW;AAEjBH,EAAAA,SAAS,EAAE;AAAEW,IAAAA,QAAQ,EAAEH;AAAZ;AAFM,CAArB;AAIA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CAACW,QAAD,EACrBa,YADqB,EAErBpB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAFE,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from './reducers/userReducers'\n\nconst reducers = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('usersInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}