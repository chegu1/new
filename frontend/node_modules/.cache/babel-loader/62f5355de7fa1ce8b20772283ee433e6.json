{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('usersInfo') ? JSON.parse(localStorage.getItem('userInfo')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/chegu/ecommerceformers/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducers","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,MAAMC,QAAQ,GAAGR,eAAe,CAAC;AAC7BS,EAAAA,WAAW,EAAEL,kBADgB;AAE7BM,EAAAA,cAAc,EAAEL,qBAFa;AAG7BM,EAAAA,IAAI,EAAEL,WAHuB;AAI7BM,EAAAA,SAAS,EAAEL;AAJkB,CAAD,CAAhC;AAOA,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,EADnD;AAGA,MAAMI,YAAY,GAAG;AACjBR,EAAAA,IAAI,EAAE;AAAES,IAAAA,SAAS,EAAEP;AAAb;AADW,CAArB;AAGA,MAAMQ,UAAU,GAAG,CAACnB,KAAD,CAAnB;AACA,MAAMoB,KAAK,GAAGvB,WAAW,CAACS,QAAD,EACrBW,YADqB,EAErBhB,mBAAmB,CAACF,eAAe,CAAC,GAAGoB,UAAJ,CAAhB,CAFE,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers'\n\nconst reducers = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('usersInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : [];\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}