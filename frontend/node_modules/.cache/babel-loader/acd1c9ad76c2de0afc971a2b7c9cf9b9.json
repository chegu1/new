{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === item.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/chegu/ecommerceformers/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter","id"],"mappings":"AAAA,SACIA,aADJ,EACmBC,gBADnB,QAEO,4BAFP;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAAnB,GAA6BL,IAA7B,GAAoCI,CAA/D;AAFR,SAAP;AAKH,OAND,MAMO;AACH,eAAO,EACH,GAAGR,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFR,SAAP;AAIH;;AACL,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASV,MAAM,CAACG,OAA9C;AAFR,OAAP;;AAKJ;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA1BM","sourcesContent":["import {\n    CART_ADD_ITEM, CART_REMOVE_ITEM\n} from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem = state.cartItems.find((x) => x.product === item.product)\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) => x.product === item.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((x) => x.id !== action.payload)\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}